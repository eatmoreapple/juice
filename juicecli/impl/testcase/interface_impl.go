// Code generated by "juicecli impl --type Interface --output interface_impl.go"; DO NOT EDIT.

package testcase

import (
	"context"
	"database/sql"
	"github.com/eatmoreapple/juice"
)

type InterfaceImpl struct{}

// GetUserByID 根据用户id查找用户
func (i InterfaceImpl) GetUserByID(ctx context.Context, id int64) ([]*User, error) {
	manager := juice.ManagerFromContext(ctx)
	var iface Interface = i
	executor := juice.NewGenericManager[[]*User](manager).Object(iface.GetUserByID)
	return executor.QueryContext(ctx, juice.H{"id": id})
}

// CreateUser 创建用户
func (i InterfaceImpl) CreateUser(ctx context.Context, u map[string]*User) error {
	manager := juice.ManagerFromContext(ctx)
	var iface Interface = i
	executor := manager.Object(iface.CreateUser)
	_, err := executor.ExecContext(ctx, u)
	return err
}

// DeleteUserByID 根据id删除用户
func (i InterfaceImpl) DeleteUserByID(ctx context.Context, id int64, name string) (sql.Result, error) {
	manager := juice.ManagerFromContext(ctx)
	var iface Interface = i
	executor := manager.Object(iface.DeleteUserByID)
	return executor.ExecContext(ctx, juice.H{"id": id, "name": name})
}

// NewInterface returns a new Interface.
func NewInterface() Interface {
	return &InterfaceImpl{}
}
